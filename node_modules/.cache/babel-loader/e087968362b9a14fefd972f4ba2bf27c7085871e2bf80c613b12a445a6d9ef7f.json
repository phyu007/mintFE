{"ast":null,"code":"var _jsxFileName = \"/Users/phyuphyuthein/Documents/Projects/MintableProjects/mintFE/src/components/Mint.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CreateMint from './CreateMint';\nimport MintList from './MinList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MintComponent = () => {\n  _s();\n  const [mints, setMints] = useState([]);\n  const mockMints = [{\n    id: 1,\n    name: 'Mint 1',\n    description: 'This is mint 1'\n  }, {\n    id: 2,\n    name: 'Mint 2',\n    description: 'This is mint 2'\n  }, {\n    id: 3,\n    name: 'Mint 3',\n    description: 'This is mint 3'\n  }];\n\n  // useEffect(() => {\n  //     // Call API to fetch mints\n  //     fetch('https://api.example.com/mints')\n  //         .then(response => response.json())\n  //         .then(data => setMints(data))\n  //         .catch(error => console.error(error));\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreateMint, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MintList, {\n      mints: mockMints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(MintComponent, \"uk5LA1y1TFIiqfUGJ8RDuvfusF8=\");\n_c = MintComponent;\nexport default MintComponent;\nvar _c;\n$RefreshReg$(_c, \"MintComponent\");","map":{"version":3,"names":["React","useState","CreateMint","MintList","jsxDEV","_jsxDEV","MintComponent","_s","mints","setMints","mockMints","id","name","description","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phyuphyuthein/Documents/Projects/MintableProjects/mintFE/src/components/Mint.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CreateMint from './CreateMint';\nimport MintList from './MinList';\n\ninterface Mint {\n    id: number;\n    name: string;\n    description: string;\n}\n\nconst MintComponent: React.FC = () => {\n    const [mints, setMints] = useState([]);\n\n    const mockMints: Mint[] = [\n        {\n            id: 1,\n            name: 'Mint 1',\n            description: 'This is mint 1',\n        },\n        {\n            id: 2,\n            name: 'Mint 2',\n            description: 'This is mint 2',\n        },\n        {\n            id: 3,\n            name: 'Mint 3',\n            description: 'This is mint 3',\n        },\n    ];\n\n    // useEffect(() => {\n    //     // Call API to fetch mints\n    //     fetch('https://api.example.com/mints')\n    //         .then(response => response.json())\n    //         .then(data => setMints(data))\n    //         .catch(error => console.error(error));\n    // }, []);\n\n    return (\n        <div>\n            <CreateMint />\n            <MintList mints={mockMints} />\n            \n        </div>\n    );\n};\n\nexport default MintComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjC,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,SAAiB,GAAG,CACtB;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE;EACjB,CAAC,CACJ;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIR,OAAA;IAAAS,QAAA,gBACIT,OAAA,CAACH,UAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdb,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEE;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEd,CAAC;AAACX,EAAA,CApCID,aAAuB;AAAAa,EAAA,GAAvBb,aAAuB;AAsC7B,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}