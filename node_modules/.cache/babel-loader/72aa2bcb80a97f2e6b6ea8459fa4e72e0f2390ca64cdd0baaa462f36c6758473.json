{"ast":null,"code":"var _jsxFileName = \"/Users/phyuphyuthein/Documents/Projects/MintableProjects/mintFE/src/components/CreateMint.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMint = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState('');\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleImageChange = e => {\n    setImage(e.target.value);\n  };\n  const handleSubmit = async event => {\n    // Perform the mint posting logic here\n    const mintData = {\n      name: name,\n      description: description,\n      image: image\n    };\n    console.log('Mint created:', mintData);\n\n    // try {\n    //     const response = await createMint(mintData);\n    //     console.log('Mint created:', response);\n    // } catch (error) {\n    //     console.error('Error creating mint:', error);\n\n    // };\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: image,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n_s(CreateMint, \"JdmfCJ+Uvb8j+vGbpe/7tSO30I4=\");\n_c = CreateMint;\nexport default CreateMint;\nvar _c;\n$RefreshReg$(_c, \"CreateMint\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateMint","_s","name","setName","description","setDescription","image","setImage","handleNameChange","e","target","value","handleDescriptionChange","handleImageChange","handleSubmit","event","mintData","console","log","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phyuphyuthein/Documents/Projects/MintableProjects/mintFE/src/components/CreateMint.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createMint } from '../api/mintAPIs';\nconst CreateMint = () => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n\n    const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value);\n    };\n\n    const handleDescriptionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setDescription(e.target.value);\n    };\n\n    const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setImage(e.target.value);\n    };\n\n    const handleSubmit = async(event) => {\n        // Perform the mint posting logic here\n        const mintData = {\n            name: name,\n            description: description,\n            image: image\n        };\n\n        console.log('Mint created:', mintData);\n\n        // try {\n        //     const response = await createMint(mintData);\n        //     console.log('Mint created:', response);\n        // } catch (error) {\n        //     console.error('Error creating mint:', error);\n\n        // };\n    }\n\n        return (\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Name:\n                    <input type=\"text\" value={name} onChange={handleNameChange} />\n                </label>\n                <br />\n                <label>\n                    Description:\n                    <input type=\"text\" value={description} onChange={handleDescriptionChange} />\n                </label>\n                <br />\n                <label>\n                    Image:\n                    <input type=\"text\" value={image} onChange={handleImageChange} />\n                </label>\n                <br />\n                <button type=\"submit\">Post Mint</button>\n            </form>\n        );\n    };\n\nexport default CreateMint;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}