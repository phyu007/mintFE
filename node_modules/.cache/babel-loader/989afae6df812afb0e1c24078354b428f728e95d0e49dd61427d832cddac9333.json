{"ast":null,"code":"var _jsxFileName = \"/Users/phyuphyuthein/Documents/Projects/MintableProjects/mintFE/src/components/MintComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MintComponent = () => {\n  _s();\n  const [mintedItem, setMintedItem] = useState(null);\n  const [useMockData, setUseMockData] = useState(false);\n  const mintItem = async () => {\n    try {\n      if (useMockData) {\n        // Mock data scenario\n        const mockData = {\n          name: 'Mocked Item',\n          description: 'This is a mocked item for demonstration purposes',\n          uuid: 12345,\n          id: 999\n        };\n        setMintedItem(mockData);\n      } else {\n        // Actual API call\n        const response = await fetch('YOUR_MINT_API_ENDPOINT', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n            // Include any additional headers as needed\n          },\n          body: JSON.stringify({\n            name: 'Item Name',\n            description: 'Item Description',\n            image: 'Base64 Image Data'\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to mint item');\n        }\n        const data = await response.json();\n        setMintedItem(data);\n      }\n    } catch (error) {\n      console.error('Error minting item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: useMockData,\n        onChange: () => setUseMockData(!useMockData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Use Mock Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintItem,\n      children: \"Mint Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), mintedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Minted Item Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", mintedItem.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", mintedItem.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"UUID: \", mintedItem.uuid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", mintedItem.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MintComponent, \"hdLt1CildFNuCRf+W4l6NnG6KZ0=\");\n_c = MintComponent;\nexport default MintComponent;\nvar _c;\n$RefreshReg$(_c, \"MintComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MintComponent","_s","mintedItem","setMintedItem","useMockData","setUseMockData","mintItem","mockData","name","description","uuid","id","response","fetch","method","headers","body","JSON","stringify","image","ok","Error","data","json","error","console","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/phyuphyuthein/Documents/Projects/MintableProjects/mintFE/src/components/MintComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MintComponent: React.FC = () => {\n  const [mintedItem, setMintedItem] = useState<any>(null);\n  const [useMockData, setUseMockData] = useState<boolean>(false);\n\n  const mintItem = async () => {\n    try {\n      if (useMockData) {\n        // Mock data scenario\n        const mockData = {\n          name: 'Mocked Item',\n          description: 'This is a mocked item for demonstration purposes',\n          uuid: 12345,\n          id: 999,\n        };\n        setMintedItem(mockData);\n      } else {\n        // Actual API call\n        const response = await fetch('YOUR_MINT_API_ENDPOINT', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            // Include any additional headers as needed\n          },\n          body: JSON.stringify({\n            name: 'Item Name',\n            description: 'Item Description',\n            image: 'Base64 Image Data',\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to mint item');\n        }\n\n        const data = await response.json();\n        setMintedItem(data);\n      }\n    } catch (error) {\n      console.error('Error minting item:', error);\n    }\n  };\n\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={useMockData}\n          onChange={() => setUseMockData(!useMockData)}\n        />\n        Use Mock Data\n      </label>\n      <button onClick={mintItem}>Mint Item</button>\n\n      {mintedItem && (\n        <div>\n          <h2>Minted Item Details</h2>\n          <p>Name: {mintedItem.name}</p>\n          <p>Description: {mintedItem.description}</p>\n          <p>UUID: {mintedItem.uuid}</p>\n          <p>ID: {mintedItem.id}</p>\n          {/* Add more details as needed */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MintComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}